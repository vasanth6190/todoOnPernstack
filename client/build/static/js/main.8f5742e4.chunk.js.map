{"version":3,"sources":["components/Login.js","components/Register.js","components/dashboard/todolist/InputTodo.js","components/dashboard/todolist/EditTodo.js","components/dashboard/todolist/ListTodos.js","components/dashboard/Dashboard.js","components/Landing.js","App.js","index.js"],"names":["Login","setAuth","useState","email","password","inputs","setInputs","onChange","e","target","name","value","onSubmitForm","a","preventDefault","body","fetch","method","headers","JSON","stringify","response","json","parseRes","jwtToken","localStorage","setItem","toast","success","error","console","message","className","onSubmit","style","width","type","placeholder","to","Register","InputTodo","setTodosChange","description","setDescription","myHeaders","Headers","append","token","parseResponse","log","EditTodo","todo","editText","id","data-toggle","data-target","todo_id","onClick","data-dismiss","ListTodos","allTodos","todos","setTodos","jwt_token","filter","useEffect","length","map","key","deleteTodo","Dashboard","setName","setAllTodos","todosChange","getProfile","res","parseData","user_name","logout","removeItem","err","Landing","configure","App","checkAuthenticated","setIsAuthenticated","isAuthenticated","boolean","class","href","exact","path","render","props","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8f5742e4.chunk.js","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { toast } from \"react-toastify\";\n\nconst Login = ({ setAuth }) => {\n  const [inputs, setInputs] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const { email, password } = inputs;\n\n  const onChange = e =>\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\n\n  const onSubmitForm = async e => {\n    e.preventDefault();\n    try {\n      const body = { email, password };\n      const response = await fetch(\n        \"http://localhost:5000/authentication/login\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        }\n      );\n\n      const parseRes = await response.json();\n\n      if (parseRes.jwtToken) {\n        localStorage.setItem(\"token\", parseRes.jwtToken);\n        setAuth(true);\n        toast.success(\"Logged in Successfully\");\n      } else {\n        setAuth(false);\n        toast.error(parseRes);\n      }\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return (\n    <Fragment>\n      <h1 className=\"mt-5 text-center display-3\">LOGIN</h1>\n      <div className=\"d-flex justify-content-center\">\n      <form onSubmit={onSubmitForm} style={{width:\"50%\"}}>\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={email}\n          onChange={e => onChange(e)}\n          placeholder=\"Email\"\n          className=\"form-control my-3\"\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={e => onChange(e)}\n          placeholder=\"Password\"\n          className=\"form-control my-3\"\n        />\n        <button className=\"btn btn-warning btn-block\">Submit</button>\n        <Link to=\"/register\">New User?Register</Link>\n      </form>\n      </div>\n      \n    \n    </Fragment>\n  );\n};\n\nexport default Login;\n","import React, { Fragment, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nconst Register = ({ setAuth }) => {\n  const [inputs, setInputs] = useState({\n    email: \"\",\n    password: \"\",\n    name: \"\"\n  });\n\n  const { email, password, name } = inputs;\n\n  const onChange = e =>\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\n\n  const onSubmitForm = async e => {\n    e.preventDefault();\n    try {\n      const body = { email, password, name };\n      const response = await fetch(\n        \"http://localhost:5000/authentication/register\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        }\n      );\n      const parseRes = await response.json();\n\n      if (parseRes.jwtToken) {\n        localStorage.setItem(\"token\", parseRes.jwtToken);\n        setAuth(true);\n        toast.success(\"Register Successfully\");\n      } else {\n        setAuth(false);\n        toast.error(parseRes);\n      }\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return (\n    <Fragment>\n      <h1 className=\"mt-5 text-center display-4\">REGISTER</h1>\n      <div className=\"d-flex justify-content-center\">\n      <form onSubmit={onSubmitForm} style={{width:\"50%\"}}>\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={email}\n          placeholder=\"Email\"\n          onChange={e => onChange(e)}\n          className=\"form-control my-3\"\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          placeholder=\"Password\"\n          onChange={e => onChange(e)}\n          className=\"form-control my-3\"\n        />\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"Name\"\n          onChange={e => onChange(e)}\n          className=\"form-control my-3\"\n        />\n        <button className=\"btn btn-warning btn-block\">Submit</button>\n        <Link to=\"/login\">Already have an account?Login</Link>\n      </form>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Register;\n","import React, { Fragment, useState } from \"react\";\n\nconst InputTodo = ({ setTodosChange }) => {\n  const [description, setDescription] = useState(\"\");\n\n  const onSubmitForm = async e => {\n    e.preventDefault();\n    try {\n      const myHeaders = new Headers();\n\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      myHeaders.append(\"jwt_token\", localStorage.token);\n\n      const body = { description };\n      const response = await fetch(\"http://localhost:5000/dashboard/todos\", {\n        method: \"POST\",\n        headers: myHeaders,\n        body: JSON.stringify(body)\n      });\n\n      const parseResponse = await response.json();\n\n      console.log(parseResponse);\n\n      setTodosChange(true);\n      setDescription(\"\");\n      // window.location = \"/\";\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n  return (\n    <Fragment>\n      <h1 className=\"text-center my-5\">Input Todo</h1>\n      <form className=\"d-flex\" onSubmit={onSubmitForm}>\n        <input\n          type=\"text\"\n          placeholder=\"add todo\"\n          className=\"form-control\"\n          value={description}\n          onChange={e => setDescription(e.target.value)}\n        />\n        <button className=\"btn btn-success ml-2\">Add</button>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default InputTodo;\n","import React, { Fragment, useState } from \"react\";\n\nconst EditTodo = ({ todo, setTodosChange }) => {\n  //editText function\n\n  const editText = async id => {\n    try {\n      const body = { description };\n\n      const myHeaders = new Headers();\n\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      myHeaders.append(\"jwt_token\", localStorage.token);\n\n      await fetch(`http://localhost:5000/dashboard/todos/${id}`, {\n        method: \"PUT\",\n        headers: myHeaders,\n        body: JSON.stringify(body)\n      });\n\n      setTodosChange(true);\n\n      // window.location = \"/\";\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const [description, setDescription] = useState(todo.description);\n  return (\n    <Fragment>\n      <button\n        type=\"button\"\n        className=\"btn btn-warning\"\n        data-toggle=\"modal\"\n        data-target={`#id${todo.todo_id}`}\n      >\n        Edit\n      </button>\n      {/* id = \"id21\"*/}\n      <div\n        className=\"modal\"\n        id={`id${todo.todo_id}`}\n        onClick={() => setDescription(todo.description)}\n      >\n        <div className=\"modal-dialog\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h4 className=\"modal-title\">Edit Todo</h4>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                onClick={() => setDescription(todo.description)}\n              >\n                &times;\n              </button>\n            </div>\n\n            <div className=\"modal-body\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={description}\n                onChange={e => setDescription(e.target.value)}\n              />\n            </div>\n\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-warning\"\n                data-dismiss=\"modal\"\n                onClick={() => editText(todo.todo_id)}\n              >\n                Edit\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-danger\"\n                data-dismiss=\"modal\"\n                onClick={() => setDescription(todo.description)}\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default EditTodo;\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport EditTodo from \"./EditTodo\";\n\nconst ListTodos = ({ allTodos, setTodosChange }) => {\n  console.log(allTodos);\n  const [todos, setTodos] = useState([]); //empty array\n\n  //delete todo function\n\n  async function deleteTodo(id) {\n    try {\n      await fetch(`http://localhost:5000/dashboard/todos/${id}`, {\n        method: \"DELETE\",\n        headers: { jwt_token: localStorage.token }\n      });\n\n      setTodos(todos.filter(todo => todo.todo_id !== id));\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n\n  // async function getTodos() {\n  //   const res = await fetch(\"http://localhost:5000/todos\");\n\n  //   const todoArray = await res.json();\n\n  //   setTodos(todoArray);\n  // }\n\n  useEffect(() => {\n    setTodos(allTodos);\n  }, [allTodos]);\n\n  console.log(todos);\n\n  return (\n    <Fragment>\n      {\" \"}\n      <table className=\"table mt-5\">\n        <thead>\n          <tr>\n            <th>Description</th>\n            <th>Edit</th>\n            <th>Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {/*<tr>\n            <td>John</td>\n            <td>Doe</td>\n            <td>john@example.com</td>\n          </tr> */}\n\n          {todos.length !== 0 &&\n            todos[0].todo_id !== null &&\n            todos.map(todo => (\n              <tr key={todo.todo_id}>\n                <td>{todo.description}</td>\n                <td>\n                  <EditTodo todo={todo} setTodosChange={setTodosChange} />\n                </td>\n                <td>\n                  <button\n                    className=\"btn btn-danger\"\n                    onClick={() => deleteTodo(todo.todo_id)}\n                  >\n                    Delete\n                  </button>\n                </td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n    </Fragment>\n  );\n};\n\nexport default ListTodos;\n","import React, { useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\n\n//components\n\nimport InputTodo from \"./todolist/InputTodo\";\nimport ListTodos from \"./todolist/ListTodos\";\n\nconst Dashboard = ({ setAuth }) => {\n  const [name, setName] = useState(\"\");\n  const [allTodos, setAllTodos] = useState([]);\n  const [todosChange, setTodosChange] = useState(false);\n\n  const getProfile = async () => {\n    try {\n      const res = await fetch(\"http://localhost:5000/dashboard/\", {\n        method: \"GET\",\n        headers: { jwt_token: localStorage.token }\n      });\n\n      const parseData = await res.json();\n\n      setAllTodos(parseData);\n\n      setName(parseData[0].user_name);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const logout = async e => {\n    e.preventDefault();\n    try {\n      localStorage.removeItem(\"token\");\n      setAuth(false);\n      toast.success(\"Logout successfully\");\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getProfile();\n    setTodosChange(false);\n  }, [todosChange]);\n\n  return (\n    <div>\n      <div className=\"d-flex mt-5 justify-content-center\">\n        <h4>Welcome {name} to your Todolist</h4>\n        <button onClick={e => logout(e)} className=\"btn ml-2 btn-primary\">\n          Logout\n        </button>\n      </div>\n\n      <InputTodo setTodosChange={setTodosChange} />\n      <ListTodos allTodos={allTodos} setTodosChange={setTodosChange} />\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Landing = () => {\n  return (\n    <div className=\"jumbotron mt-5\">\n      <h1>Welcome to Todo City</h1>\n      <p>Sign In and start building your todo list</p>\n      <Link to=\"/login\" className=\"btn btn-primary\">\n        Login\n      </Link>\n      <Link to=\"/register\" className=\"btn btn-primary ml-3\">\n        Register\n      </Link>\n    </div>\n  );\n};\n\nexport default Landing;\n","import React, { Fragment, useState, useEffect } from \"react\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\n\nimport { toast } from \"react-toastify\";\n\n//components\n\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport Landing from \"./components/Landing\";\n\ntoast.configure();\n\nfunction App() {\n  const checkAuthenticated = async () => {\n    try {\n      const res = await fetch(\"http://localhost:5000/authentication/verify\", {\n        method: \"POST\",\n        headers: { jwt_token: localStorage.token }\n      });\n\n      const parseRes = await res.json();\n\n      parseRes === true ? setIsAuthenticated(true) : setIsAuthenticated(false);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    checkAuthenticated();\n  }, []);\n\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const setAuth = boolean => {\n    setIsAuthenticated(boolean);\n  };\n\n  return (\n    <Fragment>\n    <nav className=\"navbar navbar-dark bg-primary\">\n    <div className=\"container\">\n    <a class=\"navbar-brand text-center font-weight-bold\" href=\"/\">Todolist</a>\n    </div>\n   \n</nav>\n      <Router>\n        <div className=\"container\">\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={props =>\n                !isAuthenticated ? (\n                  <Landing {...props} />\n                ) : (\n                  <Redirect to=\"/dashboard\" />\n                )\n              }\n            />\n            <Route\n              exact\n              path=\"/login\"\n              render={props =>\n                !isAuthenticated ? (\n                  <Login {...props} setAuth={setAuth} />\n                ) : (\n                  <Redirect to=\"/dashboard\" />\n                )\n              }\n            />\n            <Route\n              exact\n              path=\"/register\"\n              render={props =>\n                !isAuthenticated ? (\n                  <Register {...props} setAuth={setAuth} />\n                ) : (\n                  <Redirect to=\"/dashboard\" />\n                )\n              }\n            />\n            <Route\n              exact\n              path=\"/dashboard\"\n              render={props =>\n                isAuthenticated ? (\n                  <Dashboard {...props} setAuth={setAuth} />\n                ) : (\n                  <Redirect to=\"/login\" />\n                )\n              }\n            />\n          </Switch>\n        </div>\n      </Router>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}